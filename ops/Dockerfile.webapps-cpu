ARG IGANET_BUILD_WEBAPPS=ON
ARG IGANET_BUILD_EXAMPLES=OFF
ARG IGANET_BUILD_UNITTESTS=OFF
ARG IGANET_BUILD_PERFTESTS=OFF
ARG IGANET_WITH_GISMO=OFF
ARG IGANET_WITH_MATPLOT=OFF
ARG IGANET_WITH_OPENMP=OFF
ARG IGANET_WITH_OPENSSL=ON

# Build stage
FROM ubuntu:22.04 as build-stage

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        clang \
        curl \
        libcurl4-openssl-dev \
        libgflags-dev \
        libz-dev \
        unzip

# Install CMake
ARG CMAKE_VERSION=3.26.4
ARG CMAKE_OS=linux
ARG CMAKE_ARCH=x86_64
WORKDIR /opt
RUN curl -fsSL --insecure -o cmake-${CMAKE_VERSION}-${CMAKE_OS}-${CMAKE_ARCH}.tar.gz https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-${CMAKE_OS}-${CMAKE_ARCH}.tar.gz \
        && tar xvzf cmake-${CMAKE_VERSION}-${CMAKE_OS}-${CMAKE_ARCH}.tar.gz \
        && rm cmake-${CMAKE_VERSION}-${CMAKE_OS}-${CMAKE_ARCH}.tar.gz

ENV PATH="$PATH:/opt/cmake-${CMAKE_VERSION}-${CMAKE_OS}-${CMAKE_ARCH}/bin"

# Install Torch
ARG LIBTORCH_URL=https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-2.0.1%2Bcpu.zip
WORKDIR /opt
RUN curl -fsSL --insecure -o libtorch.zip ${LIBTORCH_URL} \
        && unzip -q libtorch.zip \
        && rm libtorch.zip

# Install IgANet
WORKDIR /opt/iganet
COPY ./ .
WORKDIR /opt/iganet/build
RUN rm -rf * \
        && CC=clang CXX=clang++ cmake /opt/iganet \
        -DTorch_DIR=/opt/libtorch/share/cmake/Torch \
        -DIGANET_BUILD_WEBAPPS=${IGANET_BUILD_WEBAPPS} \
        -DIGANET_BUILD_EXAMPLES=${IGANET_BUILD_EXAMPLES} \
        -DIGANET_BUILD_UNITTESTS=${IGANET_BUILD_UNITTESTS} \
        -DIGANET_BUILD_PERFTESTS=${IGANET_BUILD_PERFTESTS} \
        -DIGANET_WITH_GISMO=${IGANET_WITH_GISMO} \
        -DIGANET_WITH_MATPLOT=${IGANET_WITH_MATPLOT} \
        -DIGANET_WITH_OPENMP=${IGANET_WITH_OPENMP} \
        -DIGANET_WITH_OPENSSL=${IGANET_WITH_OPENSSL} \
        && make

# Production stage
FROM ubuntu:22.04 as production-stage
COPY --from=build-stage /opt/libtorch /opt/libtorch
COPY --from=build-stage /opt/iganet/build/webapps/server /webapps/
COPY --from=build-stage /opt/iganet/build/webapps/models/lib* /webapps/models/
COPY ./cert.pem /
COPY ./key.pem /
COPY ./webapps/server.cfg /
WORKDIR /

# Start server
ENTRYPOINT ["/webapps/server", "-k", "/key.pem", "-c", "/cert.pem", "-f", "/server.cfg", "-p", "9001"]
